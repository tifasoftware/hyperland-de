#!/bin/bash

set -e

SCRIPT_DIR=$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" &>/dev/null && pwd)

# Ensure the dotfiles folder is in the correct location
EXPECTED_PATH="$HOME/.local/share/dotfiles/install"
if [[ "$SCRIPT_DIR" != "$EXPECTED_PATH" ]]; then
  echo "ERROR: This script must be run from $EXPECTED_PATH"
  echo "Current location: $SCRIPT_DIR"
  echo ""
  echo "Please move the dotfiles folder to ~/.local/share/dotfiles and try again"
  exit 1
fi

# Source helpers
source "$SCRIPT_DIR/lib/helpers.sh"
source "$SCRIPT_DIR/lib/backup.sh"

# Initialize backup session
BACKUP_SESSION=$(init_backup_session)
log_info "Backup session: $BACKUP_SESSION"

# Ensure gum is installed first
ensure_gum

# Authenticate sudo early to cache credentials
sudo -v

_installParu() {
  if ! is_installed "base-devel"; then
    log_info "Installing base-devel..."
    sudo pacman --noconfirm -S base-devel
  fi
  if ! is_installed "git"; then
    log_info "Installing git..."
    sudo pacman --noconfirm -S git
  fi

  log_info "Cloning paru from AUR..."
  rm -rf /tmp/paru
  git clone https://aur.archlinux.org/paru.git /tmp/paru
  cd /tmp/paru
  log_info "Building and installing paru (this may take a moment)..."
  makepkg -si --noconfirm
  cd ~
  rm -rf /tmp/paru
  log_success "Paru installed successfully"
}

_installPackages() {
  local total=$(grep -v '^#' "$1" | grep -v '^$' | wc -l)
  local current=0
  local failed_packages=()

  while IFS= read -r pkg || [ -n "$pkg" ]; do
    [[ -z "$pkg" || "$pkg" =~ ^# ]] && continue

    current=$((current + 1))

    if is_installed "${pkg}"; then
      log_progress "$pkg (already installed)" "$current/$total"
      continue
    fi

    # Try to install, handle conflicts gracefully
    if spinner "Installing $pkg... [$current/$total]" paru --noconfirm --needed -S "${pkg}" 2>&1; then
      log_success "$pkg"
    else
      log_error "Failed to install: $pkg"
      failed_packages+=("$pkg")
    fi
  done <"$1"

  # Report failed packages at the end
  if [ ${#failed_packages[@]} -gt 0 ]; then
    log_error "The following packages failed to install:"
    for pkg in "${failed_packages[@]}"; do
      log_detail "$pkg"
    done
    log_info "You can try installing them manually with: paru -S <package_name>"
  fi
}

clear
log_header "Dotfiles Installation"

START_TIME=$(date +%s)
TOTAL_STEPS=9
CURRENT_STEP=0

if ! is_installed "paru"; then
  CURRENT_STEP=$((CURRENT_STEP + 1))
  log_step "[$CURRENT_STEP/$TOTAL_STEPS] Installing paru AUR helper"
  _installParu
fi

CURRENT_STEP=$((CURRENT_STEP + 1))
log_step "[$CURRENT_STEP/$TOTAL_STEPS] Installing packages"
_installPackages "$SCRIPT_DIR/pkgs.txt"

CURRENT_STEP=$((CURRENT_STEP + 1))
log_step "[$CURRENT_STEP/$TOTAL_STEPS] Installing zsh plugins"
bash "$SCRIPT_DIR/setup-zsh"

CURRENT_STEP=$((CURRENT_STEP + 1))
log_step "[$CURRENT_STEP/$TOTAL_STEPS] Setting up LazyVim"
bash "$SCRIPT_DIR/setup-lazyvim"

CURRENT_STEP=$((CURRENT_STEP + 1))
log_step "[$CURRENT_STEP/$TOTAL_STEPS] Setting up Doom Emacs"
bash "$SCRIPT_DIR/setup-emacs"

CURRENT_STEP=$((CURRENT_STEP + 1))
log_step "[$CURRENT_STEP/$TOTAL_STEPS] Copying configuration files"
bash "$SCRIPT_DIR/setup-config"

CURRENT_STEP=$((CURRENT_STEP + 1))
log_step "[$CURRENT_STEP/$TOTAL_STEPS] Hardware based setup"
bash "$SCRIPT_DIR/setup-by-hardware"

CURRENT_STEP=$((CURRENT_STEP + 1))
log_step "[$CURRENT_STEP/$TOTAL_STEPS] Creating theme symlinks"
bash "$SCRIPT_DIR/setup-theme"

CURRENT_STEP=$((CURRENT_STEP + 1))
log_step "[$CURRENT_STEP/$TOTAL_STEPS] Copying applications to ~/.local/share/applications"
bash "$SCRIPT_DIR/setup-applications"

CURRENT_STEP=$((CURRENT_STEP + 1))
log_step "[$CURRENT_STEP/$TOTAL_STEPS] Configuring system"
bash "$SCRIPT_DIR/setup-system"

hyprctl reload 2>/dev/null || log_detail "Hyprland not running, skipping reload"

END_TIME=$(date +%s)
TOTAL_TIME=$((END_TIME - START_TIME))
MINUTES=$((TOTAL_TIME / 60))
SECONDS=$((TOTAL_TIME % 60))

clear
log_header "Installation Complete!"
echo
log_success "Installed in ${MINUTES}m ${SECONDS}s"
echo

# Load backup info from session file for display
source "$HOME/.local/share/dotfiles/.dotfiles-backup-session"
log_info "Backup saved to: $BACKUP_DIR"
log_info "Restore instructions: cat $RESTORE_FILE"

# Clean up session file
rm -f "$HOME/.local/share/dotfiles/.dotfiles-backup-session"

echo
log_info "Please reboot for all changes to take effect"
echo

gum confirm \
  --prompt.foreground=2 \
  --selected.foreground=15 \
  --selected.background=2 \
  --affirmative="OK" \
  --negative="" \
  "You have to pick Hyprland (uwsm-managed) in your login manager (like sddm, gdm, ly). Otherwise scripts will not be in PATH and will NOT WORK" || true

echo
if ask_yes_no "Reboot now?"; then
  clear
  systemctl reboot --no-wall 2>/dev/null || reboot 2>/dev/null
fi
